def knapsack_01(weights, values, capacity):
    n = len(weights)
    dp = [[0 for _ in range(capacity + 1)] for _ in range(n + 1)]
    for i in range(1, n + 1):
        for w in range(1, capacity + 1):
            if weights[i - 1] <= w:
                dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w])
            else:
                dp[i][w] = dp[i - 1][w]
    return dp[n][capacity]

def get_items_from_user():
    n = int(input("Enter the number of items: "))
    weights = []
    values = []
    for i in range(n):
        print(f"\nEnter details for Item {i + 1}:")
        weight = int(input("Weight: "))
        value = int(input("Value: "))
        weights.append(weight)
        values.append(value)
    return weights, values

if __name__ == "__main__":
    weights, values = get_items_from_user()
    capacity = int(input("\nEnter the capacity of the knapsack: "))
    max_value = knapsack_01(weights, values, capacity)
    print(f"\nMaximum value in the knapsack: {max_value}")
